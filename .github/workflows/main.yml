name: CI
on:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened, edited]
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  HT_BASE_URL: '${{ secrets.HT_BASE_URL }}'
  HT_COMMIT_HASH: '${{ github.event.pull_request.head.sha }}' ## required because checkout creates a detached commit with a different sha
  IMAGE_NAME: sample-errors
  IMAGE_TAG: ${{ github.head_ref }}-${{ github.event.pull_request.head.sha }}
  DOCKERHUB_USERNAME: nehahypertest
  DOCKERHUB_TOKEN: '${{ secrets.DOCKERHUB_TOKEN }}'


jobs:
  build:  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - name: Make envfile
      #   uses: SpicyPizza/create-envfile@v1.3
      #   with: 
      #     envkey_PG_HOST: ${{ secrets.PG_HOST }}
      #     envkey_PG_USER: ${{ secrets.PG_USER }}
      #     envkey_PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
      #     envkey_PG_PORT: ${{ secrets.PG_PORT }}
      #     envkey_PG_DB: ${{ secrets.PG_DB }}
      #     envkey_PG_JWT_SIGN_KEY: ${{ secrets.JWT_SIGN_KEY }}
      #     envkey_PORT: 4321
      #     envkey_HOST: 0.0.0.0

      # - name: Checking envs
      #   run: |
      #     cat .env
      #     printenv|sort
 
      # Login to dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      # - name: Build and push docker image
      #   run: | 
      #     docker build -t=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
      #     docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      #     docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} 

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          build-args: |
            PG_HOST_ARG: ${{ secrets.PG_HOST }}
            PG_USER_ARG: ${{ secrets.PG_USER }}
            PG_PASSWORD_ARG: ${{ secrets.PG_PASSWORD }}
            PG_PORT_ARG: ${{ secrets.PG_PORT }}
            PG_DB_ARG: ${{ secrets.PG_DB }}
            JWT_SIGN_KEY_ARG: ${{ secrets.JWT_SIGN_KEY }}

            
  deploy:  
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.5.5
          command: version
          options: --client
        env:
         # Only required for first step in job where API is called
         # All subsequent steps in a job will not re-download the CLI
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       

      - name: argocd
        run: |
          argocd login 65.2.129.155:30095 --username admin --password Hypertest123@ --insecure
          argocd app set sample-errors-{{ .github.head_ref }} --helm-set image.tag=${{ env.IMAGE_TAG }}
          argocd app sync sample-errors-{{ .github.head_ref }}


      
  # hypertest-start-test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - name: Download hypertest ci
  #     run: wget -O ht-cli.tar.xz https://hypertest-binaries-1.s3.ap-south-1.amazonaws.com/ht-cli/ht-cli-latest.tar.xz && tar xvf ht-cli.tar.xz
    
  #   - name: HyperTest can run test
  #     run: ./hypertest can-run-test


  #   - name: HyperTest start new test
  #     run: ./hypertest start-new-test -c ${{ github.head_ref }}.hypertest.demo
